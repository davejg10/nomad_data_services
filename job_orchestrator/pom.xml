<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>com.nomad.multi</groupId>
		<artifactId>data-services</artifactId>
		<version>1.0-SNAPSHOT</version>
	</parent>

	<artifactId>job_orchestrator</artifactId>

	<properties>
		<start-class>com.nomad.job_orchestrator.JobOrchestratorApplication</start-class>
		<version.spring.cloud>2024.0.0</version.spring.cloud>
		<!-- Plugins -->
		<functionResourceGroup>${functionResourceGroup.default}</functionResourceGroup>
		<functionAppName>${functionAppName.default}</functionAppName>
		<functionAppName.default>fa-dev-uks-nomad-02-job-orchestrator</functionAppName.default>
		<functionResourceGroup.default>rg-dev-uks-nomad-02</functionResourceGroup.default>
	</properties>

	<dependencyManagement>
		<dependencies>
			<!-- Used for spring-cloud-function-adapter-azure below -->
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${version.spring.cloud}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>com.nomad.multi</groupId>
			<artifactId>config</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>com.nomad.multi</groupId>
			<artifactId>data_library</artifactId>
			<version>${project.version}</version>
		</dependency>
		<!-- This brings in our Neo4jTestConfigurationClass but only when testing  -->
		<dependency> 
			<groupId>com.nomad.multi</groupId>
			<artifactId>data_library</artifactId>
			<version>${project.version}</version>
			<type>test-jar</type>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.nomad.multi</groupId>
			<artifactId>scraping_library</artifactId>
			<version>${project.version}</version>
		</dependency>
		
		<!-- Used to create Azure Functions -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-function-adapter-azure</artifactId>
		</dependency>

		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<scope>runtime</scope>
		</dependency>

		<!-- Used to read YML file -->
		<dependency>
			<groupId>com.fasterxml.jackson.dataformat</groupId>
			<artifactId>jackson-dataformat-yaml</artifactId>
		</dependency>

		<!-- Used for mocking Neo4j repository. Creates an in-memory db	-->
		<dependency>
			<groupId>org.neo4j.test</groupId>
			<artifactId>neo4j-harness</artifactId>
			<version>5.26.0</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-nop</artifactId>
				</exclusion>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
    		</exclusions>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<!-- Azure Functions Maven Plugin to package the Azure Function -->
				<groupId>com.microsoft.azure</groupId>
				<artifactId>azure-functions-maven-plugin</artifactId>
				<version>1.37.0</version>
				<configuration>
					<funcPort>7072</funcPort>
					<resourceGroup>${functionResourceGroup}</resourceGroup>
					<appName>${functionAppName}</appName>
					<hostJson>${project.basedir}/host.json</hostJson>
                    <localSettingsJson>${project.basedir}/local.settings.json</localSettingsJson>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>package</goal> <!-- This makes it trigger during 'mvn package' -->
						</goals>
					</execution>
            	</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<annotationProcessorPaths>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</path>
					</annotationProcessorPaths>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>
